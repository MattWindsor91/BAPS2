<Window x:Class="URY.BAPS.Client.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="clr-namespace:URY.BAPS.Client.Wpf.Controls"
        mc:Ignorable="d"
        Title="BAPS Presenter" Height="768" Width="1024"
        DataContext="{Binding Main, Source={StaticResource Locator}}">
    <Window.Resources>
        <!-- We need these seemingly redundant resources to encode the channel
             IDs used in the input bindings below as `ushort`s, not strings.
        
             We could, instead, make the commands take strings and parse them
             in the command handlers.  Both seem ugly, so here we are. -->
        <sys:UInt16 x:Key="Chan0">0</sys:UInt16>
        <sys:UInt16 x:Key="Chan1">1</sys:UInt16>
        <sys:UInt16 x:Key="Chan2">2</sys:UInt16>
        <!-- Brushes -->
        <SolidColorBrush x:Key="SideBg" Color="#FFE1E1E1" />
        <!-- Styles -->
        <Style x:Key="MainTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="18pt" />
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <!-- F1-3 control the first channel, if it exists -->
        <KeyBinding Key="F1" Command="{Binding ForwardPlayCommand}" CommandParameter="{StaticResource Chan0}" />
        <KeyBinding Key="F2" Command="{Binding ForwardPauseCommand}" CommandParameter="{StaticResource Chan0}" />
        <KeyBinding Key="F3" Command="{Binding ForwardStopCommand}" CommandParameter="{StaticResource Chan0}" />
        <!-- F5-7 control the second channel, if it exists -->
        <KeyBinding Key="F5" Command="{Binding ForwardPlayCommand}" CommandParameter="{StaticResource Chan1}" />
        <KeyBinding Key="F6" Command="{Binding ForwardPauseCommand}" CommandParameter="{StaticResource Chan1}" />
        <KeyBinding Key="F7" Command="{Binding ForwardStopCommand}" CommandParameter="{StaticResource Chan1}" />
        <!-- F9-11 control the third channel, if it exists -->
        <KeyBinding Key="F9" Command="{Binding ForwardPlayCommand}" CommandParameter="{StaticResource Chan2}" />
        <KeyBinding Key="F10" Command="{Binding ForwardPauseCommand}" CommandParameter="{StaticResource Chan2}" />
        <KeyBinding Key="F11" Command="{Binding ForwardStopCommand}" CommandParameter="{StaticResource Chan2}" />
    </Window.InputBindings>
    <DockPanel>
        <!-- Order is significant here: the text box and timeline should take
             up all of the window width. -->
        <StackPanel DockPanel.Dock="Top" Height="72px"
                    Background="{StaticResource MainBg}" Orientation="Horizontal">
            <Image Width="64px" Height="64px" Margin="4px" Source="{DynamicResource Logo}" />
            <TextBlock Foreground="{StaticResource MainFg}"
                       FontSize="20px"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Margin="12px 0">
                Broadcasting and
                <LineBreak />
                Presenting Suite
            </TextBlock>
            <Button Width="64px" Margin="4px">
                <TextBlock TextAlignment="Center">Load<LineBreak />Show</TextBlock>
            </Button>
            <Button Width="64px" Margin="4px">
                <TextBlock TextAlignment="Center">Search<LineBreak />Library</TextBlock>
            </Button>
        </StackPanel>
        <TextBox DockPanel.Dock="Bottom" MinHeight="72pt"
                 Style="{StaticResource MainTextBoxStyle}"
                 Text="{Binding Text, Mode=TwoWay}" />
        <TextBox DockPanel.Dock="Bottom" />
        <ListView
            DockPanel.Dock="Left"
            Width="320px"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ItemsSource="{Binding Directories}"
            Background="{StaticResource SideBg}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <controls:Directory />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ListView
            ItemsSource="{Binding Channels}"
            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <controls:Channel />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </DockPanel>
</Window>