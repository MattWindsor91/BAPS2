<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:converters="clr-namespace:URY.BAPS.Client.Wpf.Converters"
             xmlns:designData="clr-namespace:URY.BAPS.Client.Wpf.DesignData"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight" x:Class="URY.BAPS.Client.Wpf.Controls.TrackBar"
             mc:Ignorable="d"
             Height="72px" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance {x:Type designData:MockPlayerViewModel}, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <SolidColorBrush x:Key="IntroBorderBrush" Color="#AAD13438" />
        <LinearGradientBrush x:Key="IntroBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#E81123" Offset="0" />
            <GradientStop Color="white" Offset="0.05" />
            <GradientStop Color="#E81123" Offset="0.5" />
            <GradientStop Color="#D13438" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="UnderlayBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#995D5A58" Offset="0" />
            <GradientStop Color="#994C4A48" Offset="0.5" />
            <GradientStop Color="#995D5A58" Offset="0.75" />
            <GradientStop Color="#997A7574" Offset="1" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="PositionBorderBrush" Color="#AA10893E" />
        <LinearGradientBrush x:Key="PositionBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#00CC6A" Offset="0" />
            <GradientStop Color="white" Offset="0.05" />
            <GradientStop Color="#00CC6A" Offset="0.5" />
            <GradientStop Color="#10893E" Offset="1" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="CueBorderBrush" Color="#AA0063B1" />
        <LinearGradientBrush x:Key="CueBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#0078D7" Offset="0" />
            <GradientStop Color="white" Offset="0.05" />
            <GradientStop Color="#0078D7" Offset="0.5" />
            <GradientStop Color="#0063B1" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="BaseVBarStyle" TargetType="{x:Type Line}">
            <Setter Property="Y1" Value="0" />
            <Setter Property="Y2"
                    Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}, Mode=FindAncestor}}" />
            <Setter Property="Opacity" Value="0.8" />
            <Setter Property="StrokeThickness" Value="4" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Direction="0" BlurRadius="4" ShadowDepth="3" />
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <!-- Move the line to account for its thickness. -->
                    <TranslateTransform X="2" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="rectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AccentBg}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="rectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AccentBg}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="polygon">
                                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                            </BooleanAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="polygon">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="rectangle" Width="6" Height="{TemplateBinding ActualHeight}"
                                       SnapsToDevicePixels="True"
                                       Fill="{DynamicResource AccentFg}"
                                       StrokeThickness="1"
                                       Stroke="{StaticResource AccentBg}"
                                       StrokeLineJoin="Round" HorizontalAlignment="Left" />
                            <Polygon x:Name="polygon" VerticalAlignment="Center"
                                     StrokeThickness="1"
                                     StrokeLineJoin="Round"
                                     HorizontalAlignment="Right"
                                     SnapsToDevicePixels="True"
                                     Stroke="{StaticResource AccentBg}"
                                     Fill="{StaticResource AccentFg}"
                                     Opacity="0.8"
                                     Points="-7,7 6,0 6,14">
                            </Polygon>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar
                                x:Name="Tick"
                                SnapsToDevicePixels="True"
                                Placement="Top"
                                Fill="#AAFFFFFF"
                                Visibility="Collapsed" />
                            <Track x:Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                                  Command="Slider.DecreaseLarge" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb
                                        Style="{StaticResource SliderThumbStyle}"
                                        Height="{TemplateBinding ActualHeight}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                                  Command="Slider.IncreaseLarge" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <TickBar x:Name="BottomTick"
                                     SnapsToDevicePixels="True"
                                     Fill="{TemplateBinding Foreground}"
                                     Placement="Bottom"
                                     Height="4"
                                     Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter TargetName="Tick" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter TargetName="Tick" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter TargetName="Tick" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="Foreground" Value="#55FFFFFF" />
            <Setter Property="FontSize" Value="14px" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="2px 0px" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <converters:SliderValueChangedEventArgsToUintConverter x:Key="SliderValueChangedEventArgsToUintConverter"/>
        <converters:MsecToPositionStringConverter x:Key="MsecToPositionStringConverter" />
    </UserControl.Resources>
    <Grid x:Name="Canvas" Background="black" ClipToBounds="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="16px" />
            <RowDefinition Height="*" />
            <RowDefinition Height="16px" />
        </Grid.RowDefinitions>

        <!-- * Labels * -->
        <TextBlock Grid.Row="0"><Run Text="Intro"/></TextBlock>
        <TextBlock Grid.Row="1"><Run Text="Position"/></TextBlock>
        <TextBlock Grid.Row="2"><Run Text="Cue"/></TextBlock>
        <TextBlock Grid.Row="0" HorizontalAlignment="Right"
                   Text="{Binding IntroPosition, Converter={StaticResource MsecToPositionStringConverter}}" />
        <TextBlock Grid.Row="1" HorizontalAlignment="Right"
                   Text="{Binding Position, Converter={StaticResource MsecToPositionStringConverter}}" />
        <TextBlock Grid.Row="2" HorizontalAlignment="Right"
                   Text="{Binding CuePosition, Converter={StaticResource MsecToPositionStringConverter}}" />

        <!-- * Horizontal bars * -->
        <!-- Intro -->
        <Border
            Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
            BorderBrush="{StaticResource IntroBorderBrush}" Background="{StaticResource UnderlayBrush}"
            BorderThickness="0px 1px">
            <Rectangle x:Name="IntroBar" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                       Fill="{StaticResource IntroBrush}" Opacity="0.5"
                       Width="{c:Binding 'Value/(Maximum-Minimum)*Width', ElementName=IntroSlider}" />
        </Border>
        <!-- Main -->
        <Border
            Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
            BorderBrush="{StaticResource PositionBorderBrush}" Background="{StaticResource UnderlayBrush}"
            BorderThickness="0px 1px">
            <Rectangle x:Name="PositionBar" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                       Fill="{StaticResource PositionBrush}" Opacity="0.5"
                       Width="{c:Binding 'Value/(Maximum-Minimum)*Width', ElementName=PositionSlider}" />
        </Border>
        <!-- Cue -->
        <Border Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                BorderBrush="{StaticResource CueBorderBrush}" Background="{StaticResource UnderlayBrush}"
                BorderThickness="0px 1px">
            <Rectangle x:Name="CueBar" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                       Fill="{StaticResource CueBrush}" Opacity="0.5"
                       Width="{c:Binding 'Value/(Maximum-Minimum)*Width', ElementName=CueSlider}" />
        </Border>

        <!-- * Vertical bars * -->

        <Line x:Name="IntroVBar" Grid.Row="0" Grid.RowSpan="3"
              Style="{StaticResource BaseVBarStyle}"
              Stroke="{StaticResource IntroBorderBrush}"
              X1="{Binding Width, ElementName=IntroBar}"
              X2="{Binding X1, ElementName=IntroVBar}" />
        <Line x:Name="PositionVBar" Grid.Row="0" Grid.RowSpan="3"
              Style="{StaticResource BaseVBarStyle}"
              Stroke="{StaticResource PositionBorderBrush}"
              X1="{Binding Width, ElementName=PositionBar}"
              X2="{Binding X1, ElementName=PositionVBar}" />
        <Line x:Name="CueVBar" Grid.Row="0" Grid.RowSpan="3"
              Style="{StaticResource BaseVBarStyle}"
              Stroke="{StaticResource CueBorderBrush}"
              X1="{Binding Width, ElementName=CueBar}"
              X2="{Binding X1, ElementName=CueVBar}" />


        <!-- * Sliders * -->
        <!-- Intro -->
        <Slider Grid.Row="0" x:Name="IntroSlider"
                Maximum="{Binding Duration, Mode=OneWay}"
                Value="{Binding IntroPosition, Mode=OneWay}"
                Width="{Binding ActualWidth, ElementName=Canvas}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ValueChanged">
                    <mvvm:EventToCommand Command="{Binding SetIntroCommand, Mode=OneWay}"
                                         EventArgsConverter="{StaticResource SliderValueChangedEventArgsToUintConverter}"
                                         PassEventArgsToCommand="True"
                                         MustToggleIsEnabled="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Slider>
        <!-- Main -->
        <Slider Grid.Row="1" x:Name="PositionSlider"
                Maximum="{Binding Duration, Mode=OneWay}"
                Value="{Binding Position, Mode=OneWay}"
                Width="{Binding ActualWidth, ElementName=Canvas}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ValueChanged">
                    <mvvm:EventToCommand Command="{Binding SetPositionCommand, Mode=OneWay}"
                                         EventArgsConverter="{StaticResource SliderValueChangedEventArgsToUintConverter}"
                                         PassEventArgsToCommand="True"
                                         MustToggleIsEnabled="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Slider>
        <!-- Cue -->
        <Slider Grid.Row="2" x:Name="CueSlider"
                Maximum="{Binding Duration, Mode=OneWay}"
                Value="{Binding CuePosition, Mode=OneWay}"
                Width="{Binding ActualWidth, ElementName=Canvas}"
                TickPlacement="Both"
                TickFrequency="10000"
                IsEnabled="{Binding HasLoadedAudioTrack}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ValueChanged">
                    <mvvm:EventToCommand Command="{Binding SetCueCommand, Mode=OneWay}"
                                         EventArgsConverter="{StaticResource SliderValueChangedEventArgsToUintConverter}"
                                         PassEventArgsToCommand="True"
                                         MustToggleIsEnabled="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Slider>
    </Grid>
</UserControl>