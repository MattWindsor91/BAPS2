<Window x:Class="BAPSPresenterNG.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:BAPSPresenterNG"
        mc:Ignorable="d"
        Title="BAPS Presenter" Height="768" Width="1024"
        DataContext="{Binding Main, Source={StaticResource Locator}}">
    <Window.Resources>
        <!-- We need these seemingly redundant resources to encode the channel
             IDs used in the input bindings below as `ushort`s, not strings.
        
             We could, instead, make the commands take strings and parse them
             in the command handlers.  Both seem ugly, so here we are. -->
        <sys:UInt16 x:Key="Chan0">0</sys:UInt16>
        <sys:UInt16 x:Key="Chan1">1</sys:UInt16>
        <sys:UInt16 x:Key="Chan2">2</sys:UInt16>
        <!-- Styles -->
        <Style x:Key="MainTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="18pt" />
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <!-- F1-3 control the first channel, if it exists -->
        <KeyBinding Key="F1" Command="{Binding ForwardPlayCommand}" CommandParameter="{StaticResource Chan0}"/>
        <KeyBinding Key="F2" Command="{Binding ForwardPauseCommand}" CommandParameter="{StaticResource Chan0}"/>
        <KeyBinding Key="F3" Command="{Binding ForwardStopCommand}" CommandParameter="{StaticResource Chan0}"/>
        <!-- F5-7 control the second channel, if it exists -->
        <KeyBinding Key="F5" Command="{Binding ForwardPlayCommand}" CommandParameter="{StaticResource Chan1}"/>
        <KeyBinding Key="F6" Command="{Binding ForwardPauseCommand}" CommandParameter="{StaticResource Chan1}"/>
        <KeyBinding Key="F7" Command="{Binding ForwardStopCommand}" CommandParameter="{StaticResource Chan1}"/>
        <!-- F9-11 control the third channel, if it exists -->
        <KeyBinding Key="F9" Command="{Binding ForwardPlayCommand}" CommandParameter="{StaticResource Chan2}"/>
        <KeyBinding Key="F10" Command="{Binding ForwardPauseCommand}" CommandParameter="{StaticResource Chan2}"/>
        <KeyBinding Key="F11" Command="{Binding ForwardStopCommand}" CommandParameter="{StaticResource Chan2}"/>
    </Window.InputBindings>
    <DockPanel>
        <!-- Order is significant here: the text box and timeline should take
             up all of the window width. -->
        <TextBox DockPanel.Dock="Bottom" Name="textBox" MinHeight="72pt"
                 Style="{StaticResource MainTextBoxStyle}"
                 Text="{Binding Text, Mode=TwoWay}"/>
        <TextBox DockPanel.Dock="Bottom" Name="timeLine"/>
        <StackPanel DockPanel.Dock="Left" Name="directoryPanel">
            <Grid Name="libraryButtons">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="42pt"/>
                    <ColumnDefinition Width="*" MinWidth="42pt"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="42pt"/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Grid.Column="0">
                    <TextBlock TextAlignment="Center">Load<LineBreak/>Show</TextBlock>
                </Button>
                <Button Grid.Row="0" Grid.Column="1">
                    <TextBlock TextAlignment="Center">Search<LineBreak/>Library</TextBlock>
                </Button>
            </Grid>
        </StackPanel>
        <ListView Name="channelList"
                  ItemsSource="{Binding Channels}"
                  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemTemplate>
                <DataTemplate>
                    <local:Channel />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </DockPanel>
</Window>
